// Pines de conexión del sensor TCS230
#define S0 4
#define S1 5
#define S2 6
#define S3 7
#define OUT 8

// Variables para almacenar los valores de frecuencia de cada color
int redFrequency = 0;
int greenFrequency = 0;
int blueFrequency = 0;

void setup() {
  // Configurar los pines del sensor
  pinMode(S0, OUTPUT);
  pinMode(S1, OUTPUT);
  pinMode(S2, OUTPUT);
  pinMode(S3, OUTPUT);
  pinMode(OUT, INPUT);
  
  // Configurar la escala de frecuencia a 20%
  digitalWrite(S0, HIGH);
  digitalWrite(S1, LOW);
  
  // Iniciar comunicación serial
  Serial.begin(9600);
}

void loop() {
  // Leer el componente rojo
  digitalWrite(S2, LOW);
  digitalWrite(S3, LOW);
  redFrequency = pulseIn(OUT, LOW);
  
  // Leer el componente verde
  digitalWrite(S2, HIGH);
  digitalWrite(S3, HIGH);
  greenFrequency = pulseIn(OUT, LOW);
  
  // Leer el componente azul (opcional, para mejor discriminación)
  digitalWrite(S2, LOW);
  digitalWrite(S3, HIGH);
  blueFrequency = pulseIn(OUT, LOW);
  
  // Mostrar los valores en el monitor serial
  Serial.print("R = ");
  Serial.print(redFrequency);
  Serial.print(" G = ");
  Serial.print(greenFrequency);
  Serial.print(" B = ");
  Serial.print(blueFrequency);
  Serial.println();
  
  // Determinar si el color es rojo o verde
  if (redFrequency > greenFrequency && redFrequency > blueFrequency) {
    Serial.println("Color detectado: ROJO");
  } 
  else if (greenFrequency > redFrequency && greenFrequency > blueFrequency) {
    Serial.println("Color detectado: VERDE");
  }
  else {
    Serial.println("Color no identificado (o es otro color)");
  }
  
  delay(500); // Esperar medio segundo entre lecturas
}
